name: Portability Check

on:
  workflow_dispatch:
    inputs:
      git-ref:
        required: false
        default: "main"
        type: string
  workflow_call:
    inputs:
      git-ref:
        required: false
        default: "main"
        type: string

jobs:
  execute:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.git-ref }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .
      - name: Execute
        run: |
          python -m penv "my_penv_${{ matrix.python-version }}"
          my_penv_${{ matrix.python-version }}\Activate.ps1
          python -m pip install --upgrade pip
          python -m pip install numpy
          python -c "import numpy;print(numpy.random.randn(5))"
          Compress-Archive -Path "my_penv_${{ matrix.python-version }}" -DestinationPath "my_penv_${{ matrix.python-version }}.zip"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: my_penv_${{ matrix.python-version }}
          path: ./my_penv_${{ matrix.python-version }}.zip
  check:
    needs: execute
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11", "3.12"]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: my_penv_${{ matrix.python-version }}
          path: .
      - name: Extract Artifact
        run: |
          Expand-Archive -Path "my_penv_${{ matrix.python-version }}.zip" -DestinationPath  "my_penv_${{ matrix.python-version }}"
      - name: Check
        run: |
          my_penv_${{ matrix.python-version }}\my_penv_${{ matrix.python-version }}\Activate.ps1
          echo $env:PATH
          python -c "import sys; f'{sys.version_info.major}.{sys.version_info.minor}' == '${MATRIX_PYTHON_VERSION}'"
          python -c "import numpy;print(numpy.random.randn(5))"
